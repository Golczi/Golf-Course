function getMarginVal(a,b){return a*b}function transition(a,b,c){var d;c&&0!==b&&(d="next"===c?"-=":"+="),a.animate({"margin-left":d?d+b:b})}var pipwerks={};pipwerks.UTILS={},pipwerks.debug={isActive:!0},pipwerks.SCORM={version:null,handleCompletionStatus:!0,handleExitMode:!0,API:{handle:null,isFound:!1},connection:{isActive:!1},data:{completionStatus:null,exitStatus:null},debug:{}},pipwerks.SCORM.isAvailable=function(){return!0},pipwerks.SCORM.API.find=function(a){for(var b=null,c=0,d=500,e="SCORM.API.find",f=pipwerks.UTILS.trace,g=pipwerks.SCORM;!a.API&&!a.API_1484_11&&a.parent&&a.parent!=a&&d>=c;)c++,a=a.parent;if(g.version)switch(g.version){case"2004":a.API_1484_11?b=a.API_1484_11:f(e+": SCORM version 2004 was specified by user, but API_1484_11 cannot be found.");break;case"1.2":a.API?b=a.API:f(e+": SCORM version 1.2 was specified by user, but API cannot be found.")}else a.API_1484_11?(g.version="2004",b=a.API_1484_11):a.API&&(g.version="1.2",b=a.API);return b?(f(e+": API found. Version: "+g.version),f("API: "+b)):f(e+": Error finding API. \nFind attempts: "+c+". \nFind attempt limit: "+d),b},pipwerks.SCORM.API.get=function(){var a=null,b=window,c=pipwerks.SCORM,d=c.API.find,e=pipwerks.UTILS.trace;return b.parent&&b.parent!=b&&(a=d(b.parent)),!a&&b.top.opener&&(a=d(b.top.opener)),!a&&b.top.opener&&b.top.opener.document&&(a=d(b.top.opener.document)),a?c.API.isFound=!0:e("API.get failed: Can't find the API!"),a},pipwerks.SCORM.API.getHandle=function(){var a=pipwerks.SCORM.API;return a.handle||a.isFound||(a.handle=a.get()),a.handle},pipwerks.SCORM.connection.initialize=function(){var a=!1,b=pipwerks.SCORM,c=b.data.completionStatus,d=pipwerks.UTILS.trace,e=pipwerks.UTILS.StringToBoolean,f=b.debug,g="SCORM.connection.initialize ";if(d("connection.initialize called."),b.connection.isActive)d(g+"aborted: Connection already active.");else{var h=b.API.getHandle(),i=0;if(h){switch(b.version){case"1.2":a=e(h.LMSInitialize(""));break;case"2004":a=e(h.Initialize(""))}if(a)if(i=f.getCode(),null!==i&&0===i){if(b.connection.isActive=!0,b.handleCompletionStatus&&(c=b.status("get")))switch(c){case"not attempted":b.status("set","incomplete");break;case"unknown":b.status("set","incomplete")}}else a=!1,d(g+"failed. \nError code: "+i+" \nError info: "+f.getInfo(i));else i=f.getCode(),d(null!==i&&0!==i?g+"failed. \nError code: "+i+" \nError info: "+f.getInfo(i):g+"failed: No response from server.")}else d(g+"failed: API is null.")}return a},pipwerks.SCORM.connection.terminate=function(){var a=!1,b=pipwerks.SCORM,c=b.data.exitStatus,d=b.data.completionStatus,e=pipwerks.UTILS.trace,f=pipwerks.UTILS.StringToBoolean,g=b.debug,h="SCORM.connection.terminate ";if(b.connection.isActive){var i=b.API.getHandle(),j=0;if(i){if(b.handleExitMode&&!c)if("completed"!==d&&"passed"!==d)switch(b.version){case"1.2":a=b.set("cmi.core.exit","suspend");break;case"2004":a=b.set("cmi.exit","suspend")}else switch(b.version){case"1.2":a=b.set("cmi.core.exit","logout");break;case"2004":a=b.set("cmi.exit","normal")}if(a=b.save()){switch(b.version){case"1.2":a=f(i.LMSFinish(""));break;case"2004":a=f(i.Terminate(""))}a?b.connection.isActive=!1:(j=g.getCode(),e(h+"failed. \nError code: "+j+" \nError info: "+g.getInfo(j)))}}else e(h+"failed: API is null.")}else e(h+"aborted: Connection already terminated.");return a},pipwerks.SCORM.data.get=function(a){var b=null,c=pipwerks.SCORM,d=pipwerks.UTILS.trace,e=c.debug,f="SCORM.data.get("+a+") ";if(c.connection.isActive){var g=c.API.getHandle(),h=0;if(g){switch(c.version){case"1.2":b=g.LMSGetValue(a);break;case"2004":b=g.GetValue(a)}if(h=e.getCode(),""!==b||0===h)switch(a){case"cmi.core.lesson_status":case"cmi.completion_status":c.data.completionStatus=b;break;case"cmi.core.exit":case"cmi.exit":c.data.exitStatus=b}else d(f+"failed. \nError code: "+h+"\nError info: "+e.getInfo(h))}else d(f+"failed: API is null.")}else d(f+"failed: API connection is inactive.");return d(f+" value: "+b),String(b)},pipwerks.SCORM.data.set=function(a,b){var c=!1,d=pipwerks.SCORM,e=pipwerks.UTILS.trace,f=pipwerks.UTILS.StringToBoolean,g=d.debug,h="SCORM.data.set("+a+") ";if(d.connection.isActive){var i=d.API.getHandle(),j=0;if(i){switch(d.version){case"1.2":c=f(i.LMSSetValue(a,b));break;case"2004":c=f(i.SetValue(a,b))}c?("cmi.core.lesson_status"===a||"cmi.completion_status"===a)&&(d.data.completionStatus=b):e(h+"failed. \nError code: "+j+". \nError info: "+g.getInfo(j))}else e(h+"failed: API is null.")}else e(h+"failed: API connection is inactive.");return c},pipwerks.SCORM.data.save=function(){var a=!1,b=pipwerks.SCORM,c=pipwerks.UTILS.trace,d=pipwerks.UTILS.StringToBoolean,e="SCORM.data.save failed";if(b.connection.isActive){var f=b.API.getHandle();if(f)switch(b.version){case"1.2":a=d(f.LMSCommit(""));break;case"2004":a=d(f.Commit(""))}else c(e+": API is null.")}else c(e+": API connection is inactive.");return a},pipwerks.SCORM.status=function(a,b){var c=!1,d=pipwerks.SCORM,e=pipwerks.UTILS.trace,f="SCORM.getStatus failed",g="";if(null!==a){switch(d.version){case"1.2":g="cmi.core.lesson_status";break;case"2004":g="cmi.completion_status"}switch(a){case"get":c=d.data.get(g);break;case"set":null!==b?c=d.data.set(g,b):(c=!1,e(f+": status was not specified."));break;default:c=!1,e(f+": no valid action was specified.")}}else e(f+": action was not specified.");return c},pipwerks.SCORM.debug.getCode=function(){var a=pipwerks.SCORM,b=a.API.getHandle(),c=pipwerks.UTILS.trace,d=0;if(b)switch(a.version){case"1.2":d=parseInt(b.LMSGetLastError(),10);break;case"2004":d=parseInt(b.GetLastError(),10)}else c("SCORM.debug.getCode failed: API is null.");return d},pipwerks.SCORM.debug.getInfo=function(a){var b=pipwerks.SCORM,c=b.API.getHandle(),d=pipwerks.UTILS.trace,e="";if(c)switch(b.version){case"1.2":e=c.LMSGetErrorString(a.toString());break;case"2004":e=c.GetErrorString(a.toString())}else d("SCORM.debug.getInfo failed: API is null.");return String(e)},pipwerks.SCORM.debug.getDiagnosticInfo=function(a){var b=pipwerks.SCORM,c=b.API.getHandle(),d=pipwerks.UTILS.trace,e="";if(c)switch(b.version){case"1.2":e=c.LMSGetDiagnostic(a);break;case"2004":e=c.GetDiagnostic(a)}else d("SCORM.debug.getDiagnosticInfo failed: API is null.");return String(e)},pipwerks.SCORM.init=pipwerks.SCORM.connection.initialize,pipwerks.SCORM.get=pipwerks.SCORM.data.get,pipwerks.SCORM.set=pipwerks.SCORM.data.set,pipwerks.SCORM.save=pipwerks.SCORM.data.save,pipwerks.SCORM.quit=pipwerks.SCORM.connection.terminate,pipwerks.UTILS.StringToBoolean=function(a){var b=typeof a;switch(b){case"object":case"string":return/(true|1)/i.test(a);case"number":return!!a;case"boolean":return a;case"undefined":return null;default:return!1}},pipwerks.UTILS.trace=function(a){pipwerks.debug.isActive&&window.console&&window.console.log&&console.log(a)};var ScormCourse=function(){"use strict";var a={currentLesson:0,lessonSlides:0,init:function(b){a.config=b,a.bindEvents(),a.getLeftMenu(),a.getLesson(0)},bindEvents:function(){"onhashchange"in window&&(window.onhashchange=a.locationHashChanged),$(a.config.previousLessonBtn).on("click",function(b){b.preventDefault(),a.currentLesson>0&&a.getLesson(--a.currentLesson)}),$(a.config.nextLessonBtn).on("click",function(b){b.preventDefault(),a.currentLesson<a.config.lessons.length-1&&a.getLesson(++a.currentLesson)})},getLesson:function(b){a.currentLesson=b,b>=0&&b<a.config.lessons.length&&($.ajax({url:a.config.lessons[b]}).done(function(b){var c=a.config.templates[1](b);$(a.config.panelTitle).html(c);var d=a.config.templates[2](b);$(a.config.content).html(d);var e=a.config.templates[3](b);$(a.config.controllsInfo).html(e)}).fail(function(){console.log("fail")}),a.lessonSlides=a.getSlidesLength(b)),a.changeHash(b)},getLeftMenu:function(){$.ajax({url:a.config.leftPanelData}).done(function(b){var c=a.config.templates[0](b);$(a.config.panelContent).html(c)})},changeHash:function(a){window.location.hash=a},locationHashChanged:function(){var b=location.hash.substr(location.hash.indexOf("#")+1,location.hash.length);a.getLesson(b)},getSlidesLength:function(b){var c=0;return $.ajax({url:a.config.lessons[b]}).done(function(a){c=a.slides.length}),c}};return a}();$(document).ready(function(){"use strict";var a=[];a.push("data/lesson0.json"),a.push("data/lesson1.json"),a.push("data/lesson2.json"),a.push("data/lesson3.json"),a.push("data/lesson4.json");var b=[];b.push($("#contentList").html()),b.push($("#panelTitle").html()),b.push($("#mainContent").html()),b.push($("#controllsInfo").html());for(var c=[],d=0;d<b.length;d++)c.push(Handlebars.compile(b[d]));var e={lessons:a,leftPanelData:"data/lessons.json",templates:c,content:".main-content",panelContent:".panel-content",panelTitle:".panel-title",controllsInfo:".controlls-info",nextLessonBtn:"#nextButton",previousLessonBtn:"#prevButton",progressBar:".progress-bar"};ScormCourse.init(e),$(".tooltipLink").tooltip()});var sliderUl=$(".slider").css("overflow","hidden").children("ul"),cards=sliderUl.find(".slide"),cardWidth=735,cardsLen=cards.length,current=0,totalCardsWidth=cardWidth*cardsLen;$("#nextButtonSlide").on("click",function(a){a.preventDefault();var b=$(".content").find("li").length-1;if(b>current){var c=getMarginVal(++current,cardWidth);console.log("val: "+c),$(".content").find("ul").animate({"margin-left":"-"+c+"px"})}}),$("#prevButtonSlide").on("click",function(a){if(a.preventDefault(),current>0){var b=getMarginVal(--current,cardWidth);console.log("val: "+b),$(".content").find("ul").animate({"margin-left":b+"px"})}});